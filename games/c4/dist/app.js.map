{"version":3,"sources":["C:/Program Files (x86)/Nodist/bin/node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/js/app.js","dist/js/board.js","dist/js/game/game-base.js","dist/js/game/game-flyweb.js","dist/js/game/game-local-2p.js","dist/js/game/game-local-ai.js","dist/js/game/index.js","dist/js/player/index.js","dist/js/player/player-ai.js","dist/js/player/player-flyweb-master.js","dist/js/player/player-flyweb-slave.js","dist/js/player/player-human.js","dist/js/player/player.js","dist/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","Game","board_1","document","addEventListener","Board","querySelector","render","navigator","setAttribute","modeDOM","modeInputDOMs","querySelectorAll","chosenMode","checked","initGameLocal2p","initGameFlyweb","clientMode","initGameLocalAi","classList","add","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","verb","v","op","TypeError","_","y","label","ops","pop","trys","push","sent","throw","return","BoardPiece","utils_1","canvas","context","getContext","getBoardScale","initConstants","reset","onresize","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","Utils","clearCanvas","window","innerWidth","SCALE","CANVAS_HEIGHT","CANVAS_WIDTH","PIECE_RADIUS","MASK_X_BEGIN","Math","max","MASK_Y_BEGIN","MESSAGE_WIDTH","MESSAGE_X_BEGIN","MESSAGE_Y_BEGIN","width","height","_this","prevBoardScale","applyPlayerAction","player","column","isColumnEverFilled","row","_a","animateAction","boardPiece","debug","animationFrame","console","log","join","getWinner","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","isWon","DRAW","announceWinner","message","showMessage","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","newRow","fillStyle","currentY","doAnimation","drawCircle","x","strokeStyle","PIECE_STROKE_STYLE","drawMask","MASK_COLOR","GameBase","players","board","currentPlayerId","isMoveAllowed","isGameWon","start","winner","move","currentPlayer","actionSuccesful","action","getAction","afterMove","getNextPlayer","_b","player_1","PlayerFlywebSlave","PlayerFlywebMaster","game","GameFlyweb","playerMaster","socket","send","JSON","stringify","type","data","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","game_base_1","_super","BASE_URL","location","pathname","substring","lastIndexOf","browser","isAcceptingPlayer","playerSlave","initClient","initServer","from","handleClientWs","WebSocket","host","onopen","evt","onclose","onerror","close","onmessage","parse","doAction","fetch","url","response","contentType","blob","headers","get","Content-Type","Cache-Control","Pragma","Expires","respondWith","Response","handleWsServer","accept","accepted","server","publishServer","onfetch","urlParts","params","request","split","URLSearchParams","onwebsocket","GameLocal2p","PlayerHuman","GameLocalAi","PlayerAi","__export","m","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","nextValue","choose","min","clone","Player","_1","clickPromiseResolver","actionPromiseResolver","handleClick","error","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","messageDOM","remove","innerHTML","messageDismissDOM","dismissHandler","removeEventListener","_c","_d","_e","_f","save","beginPath","arc","PI","fill","restore","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","floor","random","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","resize","running","runCallbacks","setTimeout","callbacks","forEach","callback","addCallback","pow"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Game = require(\"./game\");\nvar board_1 = require(\"./board\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    var board = new board_1.Board(document.querySelector('canvas'));\n    board.render();\n    if (!('publishServer' in navigator)) {\n        document.querySelector('.mode-chooser-input-flyweb').setAttribute('disabled', 'disabled');\n    }\n    document.querySelector('.mode-chooser-submit').addEventListener('click', function () {\n        var modeDOM = document.querySelector('.mode');\n        var modeInputDOMs = document.querySelectorAll('.mode-chooser-input');\n        var chosenMode = null;\n        for (var i = 0; i < modeInputDOMs.length; i++) {\n            chosenMode = modeInputDOMs[i].checked ? modeInputDOMs[i].value : null;\n            if (chosenMode) {\n                break;\n            }\n        }\n        if (!chosenMode) {\n            chosenMode = 'offline-ai';\n        }\n        if (chosenMode === 'offline-human') {\n            Game.initGameLocal2p();\n        }\n        else if (chosenMode === 'local-flyweb') {\n            Game.initGameFlyweb({ clientMode: false });\n        }\n        else if (chosenMode === 'offline-ai') {\n            Game.initGameLocalAi();\n        }\n        modeDOM.classList.add('invisible');\n        modeDOM.addEventListener('transitionend', function () {\n            modeDOM.classList.add('hidden');\n        });\n    });\n});\n\n//# sourceMappingURL=app.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Board = (function () {\n    function Board(canvas) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.getBoardScale();\n        this.initConstants();\n        this.reset();\n        this.onresize();\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.getBoardScale = function () {\n        return (window.innerWidth < 640)\n            ? Board.SCALE = 0.5\n            : Board.SCALE = 1.0;\n    };\n    Board.prototype.initConstants = function () {\n        Board.CANVAS_HEIGHT = Board.SCALE * 480;\n        Board.CANVAS_WIDTH = Board.SCALE * 640;\n        Board.PIECE_RADIUS = Board.SCALE * 25;\n        Board.MASK_X_BEGIN = Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MASK_Y_BEGIN = Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MESSAGE_WIDTH = Board.SCALE * 400;\n        Board.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\n        Board.MESSAGE_Y_BEGIN = Board.SCALE * 20;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n    };\n    Board.prototype.onresize = function () {\n        var _this = this;\n        var prevBoardScale = Board.SCALE;\n        utils_1.Utils.onresize().add(function () {\n            _this.getBoardScale();\n            if (prevBoardScale !== Board.SCALE) {\n                prevBoardScale = Board.SCALE;\n                _this.initConstants();\n                utils_1.Utils.clearCanvas(_this);\n                _this.render();\n            }\n        });\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.map[0][column] !== BoardPiece.EMPTY || column < 0 || column >= Board.COLUMNS) {\n                            return [2 /*return*/, false];\n                        }\n                        isColumnEverFilled = false;\n                        row = 0;\n                        for (i = 0; i < Board.ROWS - 1; i++) {\n                            if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                                isColumnEverFilled = true;\n                                row = i;\n                                break;\n                            }\n                        }\n                        if (!isColumnEverFilled) {\n                            row = Board.ROWS - 1;\n                        }\n                        return [4 /*yield*/, this.animateAction(row, column, player.boardPiece)];\n                    case 1:\n                        _a.sent();\n                        this.map[row][column] = player.boardPiece;\n                        this.debug();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.render();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n        console.log(this.map.map(function (row) { return row.join(' '); }).join('\\n'));\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 || j < 0 || i >= Board.ROWS || j >= Board.COLUMNS || _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return this.winnerBoardPiece = playerPiece;\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return this.winnerBoardPiece = BoardPiece.DRAW;\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        if (this.winnerBoardPiece === BoardPiece.EMPTY) {\n            return;\n        }\n        var message = '<h1>Thank you for playing.</h1>';\n        if (this.winnerBoardPiece === BoardPiece.DRAW) {\n            message += \"It's a draw\";\n        }\n        else {\n            message += \"Player \" + this.winnerBoardPiece + \" wins\";\n        }\n        message += '.<br />After dismissing this message, click the board to reset game.';\n        utils_1.Utils.showMessage(message);\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1: return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2: return Board.PLAYER_2_COLOR;\n            default: return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: Board.PIECE_STROKE_STYLE\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2 /*return*/];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: Board.PIECE_STROKE_STYLE\n                });\n            }\n        }\n    };\n    return Board;\n}());\nBoard.ROWS = 6;\nBoard.COLUMNS = 7;\nBoard.PLAYER_1_COLOR = '#55cc88';\nBoard.PLAYER_2_COLOR = '#33bbbb';\nBoard.PIECE_STROKE_STYLE = 'black';\nBoard.MASK_COLOR = '#d8d8d8';\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar GameBase = (function () {\n    function GameBase(players, canvas) {\n        this.board = new board_1.Board(canvas);\n        this.players = players;\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    GameBase.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    GameBase.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2 /*return*/];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3 /*break*/, 4];\n                        return [4 /*yield*/, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4 /*yield*/, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        else {\n                            this.afterMove(action);\n                        }\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.afterMove = function (action) {\n    };\n    GameBase.prototype.getNextPlayer = function () {\n        return (this.currentPlayerId === 0) ? 1 : 0;\n    };\n    return GameBase;\n}());\nexports.GameBase = GameBase;\n\n//# sourceMappingURL=game-base.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar GameFlyweb = (function (_super) {\n    __extends(GameFlyweb, _super);\n    function GameFlyweb(players, canvas, clientMode) {\n        if (clientMode === void 0) { clientMode = false; }\n        var _this = _super.call(this, players, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.browser = navigator;\n        _this.isAcceptingPlayer = true;\n        _this.clientMode = clientMode;\n        if (clientMode) {\n            _this.playerSlave = players[0];\n            _this.playerMaster = players[1];\n            _this.initClient();\n        }\n        else {\n            _this.playerMaster = players[0];\n            _this.playerSlave = players[1];\n            _this.initServer();\n        }\n        return _this;\n    }\n    GameFlyweb.prototype.afterMove = function (action) {\n        if ((this.clientMode && this.currentPlayerId === 1) || (!this.clientMode && this.currentPlayerId === 0)) {\n            this.playerMaster.socket.send(JSON.stringify({\n                type: 'move',\n                data: {\n                    column: action,\n                    from: this.currentPlayerId === 0 ? 'server' : 'client'\n                }\n            }));\n        }\n    };\n    GameFlyweb.prototype.initClient = function () {\n        this.handleClientWs();\n    };\n    GameFlyweb.prototype.handleClientWs = function () {\n        var _this = this;\n        var socket = new WebSocket('ws://' + window.location.host + '/api/ws');\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('client socket.onopen()', evt);\n        };\n        socket.onclose = function (evt) {\n            console.log('client socket.onclose()', evt);\n        };\n        socket.onerror = function (evt) {\n            console.log('client socket.onerror()', evt);\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('client socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (message.from === 'client') {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'start')) return [3 /*break*/, 1];\n                        utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 1 has been established. Game started!');\n                        this.start();\n                        return [3 /*break*/, 4];\n                    case 1:\n                        if (!(message.type === 'move')) return [3 /*break*/, 2];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 4];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 3:\n                        _a.sent();\n                        this.start();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.fetch = function (evt, url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, blob, headers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(this.BASE_URL + url)];\n                    case 1:\n                        response = _a.sent();\n                        contentType = response.headers.get('Content-Type');\n                        return [4 /*yield*/, response.blob()];\n                    case 2:\n                        blob = _a.sent();\n                        headers = {\n                            'Content-Type': contentType,\n                            'Cache-Control': 'no-cache, no-store, must-revalidate',\n                            'Pragma': 'no-cache',\n                            'Expires': 0\n                        };\n                        console.log('Response is: ', url);\n                        evt.respondWith(new Promise(function (r) { return r(new Response(blob, { headers: headers })); }));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameFlyweb.prototype.handleWsServer = function (evt) {\n        var _this = this;\n        var socket = evt.accept();\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('server socket.onopen()', evt, socket);\n            if (_this.isAcceptingPlayer) {\n                _this.isAcceptingPlayer = false;\n                socket.send(JSON.stringify({\n                    type: 'start',\n                    data: {\n                        accepted: _this.isAcceptingPlayer\n                    }\n                }));\n                utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 2 has been established. Game started!');\n                _this.start();\n            }\n            else {\n                socket.close();\n            }\n        };\n        socket.onclose = function (evt) {\n            console.log('server socket.onclose()', evt);\n            _this.isAcceptingPlayer = true;\n            _this.reset();\n        };\n        socket.onerror = function (evt) {\n            console.log('server socket.onerror()', evt);\n            _this.isAcceptingPlayer = true;\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('server socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (message.from === 'server') {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'move')) return [3 /*break*/, 1];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 3];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.start();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in this.browser)) {\n                            utils_1.Utils.showMessage(\"<h1>Attention!</h1>\\n        FlyWeb requires Firefox Developer Edition or Nightly,\\n        and enabling \\\"dom.flyweb.enabled\\\" flag at about:config\");\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, this.browser.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('me Requested for url: ', url, params);\n                                        _a = url;\n                                        switch (_a) {\n                                            case '/dist/app.js': return [3 /*break*/, 1];\n                                        }\n                                        return [3 /*break*/, 3];\n                                    case 1: return [4 /*yield*/, this.fetch(evt, '/dist/app-flyweb-client.js')];\n                                    case 2:\n                                        _b.sent();\n                                        return [3 /*break*/, 5];\n                                    case 3: return [4 /*yield*/, this.fetch(evt, url)];\n                                    case 4:\n                                        _b.sent();\n                                        _b.label = 5;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        server.onwebsocket = function (evt) {\n                            var url = evt.request.url;\n                            if (url === '/api/ws') {\n                                _this.handleWsServer(evt);\n                            }\n                        };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return GameFlyweb;\n}(game_base_1.GameBase));\nfunction initGameFlyweb(_a) {\n    var _this = this;\n    var _b = _a.clientMode, clientMode = _b === void 0 ? false : _b;\n    var canvas = document.querySelector('canvas');\n    var players = null;\n    if (clientMode) {\n        players = [\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    else {\n        players = [\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    var game = new GameFlyweb(players, canvas, clientMode);\n    utils_1.Utils.showMessage('<h1>Welcome!</h1>Game will start after Player 2 has been connected.');\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    if (game.playerMaster && game.playerMaster.socket) {\n                        game.playerMaster.socket.send(JSON.stringify({\n                            type: 'reset',\n                            data: {\n                                reset: true\n                            }\n                        }));\n                    }\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameFlyweb = initGameFlyweb;\n\n//# sourceMappingURL=game-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocal2p = (function (_super) {\n    __extends(GameLocal2p, _super);\n    function GameLocal2p(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocal2p;\n}(game_base_1.GameBase));\nfunction initGameLocal2p() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocal2p([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocal2p = initGameLocal2p;\n\n//# sourceMappingURL=game-local-2p.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocalAi = (function (_super) {\n    __extends(GameLocalAi, _super);\n    function GameLocalAi(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocalAi;\n}(game_base_1.GameBase));\nfunction initGameLocalAi() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocalAi([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocalAi = initGameLocalAi;\n\n//# sourceMappingURL=game-local-ai.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./game-flyweb\"));\n__export(require(\"./game-local-2p\"));\n__export(require(\"./game-local-ai\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./player\"));\n__export(require(\"./player-ai\"));\n__export(require(\"./player-human\"));\n__export(require(\"./player-flyweb-master\"));\n__export(require(\"./player-flyweb-slave\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece = (boardPiece === board_1.BoardPiece.PLAYER_1) ? board_1.BoardPiece.PLAYER_2 : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return (boardPiece === board_1.BoardPiece.EMPTY)\n            ? 0\n            : boardPiece === this.boardPiece\n                ? 1\n                : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece = tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece = tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece = tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece = tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return (depth % 2 === 0)\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this.boardPiece + \" choose column \" + action.move + \" with value of \" + action.value);\n                return [2 /*return*/, action.move];\n            });\n        });\n    };\n    return PlayerAi;\n}(player_1.Player));\nPlayerAi.MAX_DEPTH = 4;\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar PlayerFlywebMaster = (function (_super) {\n    __extends(PlayerFlywebMaster, _super);\n    function PlayerFlywebMaster(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebMaster.prototype.doAction = function (column) {\n        _super.prototype.doAction.call(this, column);\n        if (!this.socket) {\n            throw Error('PlayerFlywebMaster need WebSocket object');\n        }\n    };\n    PlayerFlywebMaster.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebMaster;\n}(_1.PlayerHuman));\nexports.PlayerFlywebMaster = PlayerFlywebMaster;\n\n//# sourceMappingURL=player-flyweb-master.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar PlayerFlywebSlave = (function (_super) {\n    __extends(PlayerFlywebSlave, _super);\n    function PlayerFlywebSlave(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.actionPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebSlave.prototype.doAction = function (column) {\n        if (this.actionPromiseResolver) {\n            this.actionPromiseResolver(column);\n        }\n    };\n    PlayerFlywebSlave.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.actionPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebSlave;\n}(player_1.Player));\nexports.PlayerFlywebSlave = PlayerFlywebSlave;\n\n//# sourceMappingURL=player-flyweb-slave.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver && 0 <= column && column < board_1.Board.COLUMNS) {\n            this.clickPromiseResolver(column);\n        }\n    };\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.doAction(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.showMessage = function (message) {\n        if (message === void 0) { message = ''; }\n        var messageDOM = document.querySelector('.message');\n        messageDOM.classList.remove('hidden');\n        var messageContentDOM = document.querySelector('.message-body-content');\n        messageContentDOM.innerHTML = message;\n        var messageDismissDOM = document.querySelector('.message-body-dismiss');\n        var dismissHandler = function () {\n            messageDOM.classList.add('invisible');\n            messageDOM.addEventListener('transitionend', function () {\n                messageDOM.classList.add('hidden');\n                messageDOM.classList.remove('invisible');\n            });\n            messageDismissDOM.removeEventListener('click', dismissHandler);\n        };\n        messageDismissDOM.addEventListener('click', dismissHandler);\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i + board_1.Board.MASK_X_BEGIN + 2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return resolve = r; });\n        window.requestAnimationFrame(resolve);\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY || column < 0 || column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    Utils.onresize = function () {\n        var callbacks = [], running = false;\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                }\n                else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n        function runCallbacks() {\n            callbacks.forEach(function (callback) {\n                callback();\n            });\n            running = false;\n        }\n        function addCallback(callback) {\n            if (callback) {\n                callbacks.push(callback);\n            }\n        }\n        return {\n            add: function (callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n                addCallback(callback);\n            }\n        };\n    };\n    return Utils;\n}());\nUtils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\nUtils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n"]}