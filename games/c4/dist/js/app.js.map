{"version":3,"sources":["app.ts"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,iCAAgC;AAChC,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC5C,IAAM,KAAK,GAAG,IAAI,aAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAA;IACzD,KAAK,CAAC,MAAM,EAAE,CAAA;IAEd,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;QACpC,QAAQ,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAA;IAC3F,CAAC;IAED,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE;QACvE,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAC/C,IAAM,aAAa,GAAiC,QAAQ,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAA;QACpG,IAAI,UAAU,GAAG,IAAI,CAAA;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9C,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAA;YACrE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,KAAK,CAAA;YACP,CAAC;QACH,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,UAAU,GAAG,YAAY,CAAA;QAC3B,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,KAAK,eAAe,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,EAAE,CAAA;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,KAAK,cAAc,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAA;QAC5C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,KAAK,YAAY,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,eAAe,EAAE,CAAA;QACxB,CAAC;QAED,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;QAClC,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE;YACxC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","file":"app.js","sourcesContent":["import * as Game from './game';\r\nimport { Board } from './board';\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const board = new Board(document.querySelector('canvas'))\r\n  board.render()\r\n\r\n  if (!('publishServer' in navigator)) {\r\n    document.querySelector('.mode-chooser-input-flyweb').setAttribute('disabled', 'disabled')\r\n  }\r\n\r\n  document.querySelector('.mode-chooser-submit').addEventListener('click', () => {\r\n    const modeDOM = document.querySelector('.mode')\r\n    const modeInputDOMs = <NodeListOf<HTMLInputElement>>document.querySelectorAll('.mode-chooser-input')\r\n    let chosenMode = null\r\n    for (let i = 0; i < modeInputDOMs.length; i++) {\r\n      chosenMode = modeInputDOMs[i].checked ? modeInputDOMs[i].value : null\r\n      if (chosenMode) {\r\n        break\r\n      }\r\n    }\r\n    if (!chosenMode) {\r\n      chosenMode = 'offline-ai'\r\n    }\r\n    if (chosenMode === 'offline-human') {\r\n      Game.initGameLocal2p()\r\n    } else if (chosenMode === 'local-flyweb') {\r\n      Game.initGameFlyweb({ clientMode: false })\r\n    } else if (chosenMode === 'offline-ai') {\r\n      Game.initGameLocalAi()\r\n    }\r\n\r\n    modeDOM.classList.add('invisible')\r\n    modeDOM.addEventListener('transitionend', () => {\r\n      modeDOM.classList.add('hidden')\r\n    })\r\n  })\r\n})\r\n"]}