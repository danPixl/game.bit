{"version":3,"sources":["C:/Program Files (x86)/Nodist/bin/node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/js/app-flyweb-client.js","dist/js/board.js","dist/js/game/game-base.js","dist/js/game/game-flyweb.js","dist/js/game/game-local-2p.js","dist/js/game/game-local-ai.js","dist/js/game/index.js","dist/js/player/index.js","dist/js/player/player-ai.js","dist/js/player/player-flyweb-master.js","dist/js/player/player-flyweb-slave.js","dist/js/player/player-human.js","dist/js/player/player.js","dist/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","Game","document","addEventListener","querySelector","classList","add","initGameFlyweb","clientMode","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","verb","v","op","TypeError","_","y","label","ops","pop","trys","push","sent","throw","return","BoardPiece","utils_1","Board","canvas","context","getContext","getBoardScale","initConstants","reset","onresize","prototype","map","ROWS","j","COLUMNS","EMPTY","winnerBoardPiece","Utils","clearCanvas","window","innerWidth","SCALE","CANVAS_HEIGHT","CANVAS_WIDTH","PIECE_RADIUS","MASK_X_BEGIN","Math","max","MASK_Y_BEGIN","MESSAGE_WIDTH","MESSAGE_X_BEGIN","MESSAGE_Y_BEGIN","width","height","_this","prevBoardScale","render","applyPlayerAction","player","column","isColumnEverFilled","row","_a","animateAction","boardPiece","debug","animationFrame","console","log","join","getWinner","direction","isWinningSequence","playerPiece","dir","count","countEmpty","k","isWon","DRAW","announceWinner","message","showMessage","getPlayerColor","PLAYER_1","PLAYER_1_COLOR","PLAYER_2","PLAYER_2_COLOR","newRow","fillStyle","currentY","doAnimation","drawCircle","x","strokeStyle","PIECE_STROKE_STYLE","drawMask","MASK_COLOR","board_1","GameBase","players","board","currentPlayerId","isMoveAllowed","isGameWon","start","winner","move","currentPlayer","actionSuccesful","action","getAction","afterMove","getNextPlayer","_b","player_1","PlayerFlywebSlave","PlayerFlywebMaster","game","GameFlyweb","playerMaster","socket","send","JSON","stringify","type","data","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","game_base_1","_super","BASE_URL","location","pathname","substring","lastIndexOf","browser","navigator","isAcceptingPlayer","playerSlave","initClient","initServer","from","handleClientWs","WebSocket","host","onopen","evt","onclose","onerror","close","onmessage","parse","doAction","fetch","url","response","contentType","blob","headers","get","Content-Type","Cache-Control","Pragma","Expires","respondWith","Response","handleWsServer","accept","accepted","server","publishServer","onfetch","urlParts","params","request","split","URLSearchParams","onwebsocket","initGameLocal2p","GameLocal2p","PlayerHuman","initGameLocalAi","GameLocalAi","PlayerAi","__export","m","ownBoardPieceValue","getBoardPieceValue","enemyBoardPiece","getStateValue","state","chainValue","tempRight","tempBottom","tempBottomRight","tempTopRight","abs","chain","transformValues","returnValue","depth","isLost","BIG_POSITIVE_NUMBER","BIG_NEGATIVE_NUMBER","getMove","alpha","beta","stateValue","MAX_DEPTH","minState","maxState","moveQueue","getMockPlayerAction","actionSuccessful","success","nextState","nextValue","choose","min","clone","Player","_1","clickPromiseResolver","actionPromiseResolver","handleClick","error","event","rect","getBoundingClientRect","clientX","left","clientY","top","getColumnFromCoord","messageDOM","remove","innerHTML","messageDismissDOM","dismissHandler","removeEventListener","_c","_d","_e","_f","save","beginPath","arc","PI","fill","restore","doubleRadius","tripleRadius","clearRect","isCoordOnColumn","coord","columnXBegin","radius","getRandomColumnNumber","floor","random","choice","promise","requestAnimationFrame","array","arr","slice","clonedMap","resize","running","runCallbacks","setTimeout","callbacks","forEach","callback","addCallback","pow"],"mappings":"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","file":"app-flyweb-client.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Game = require(\"./game\");\ndocument.addEventListener('DOMContentLoaded', function () {\n    document.querySelector('.mode').classList.add('hidden');\n    Game.initGameFlyweb({ clientMode: true });\n});\n\n//# sourceMappingURL=app-flyweb-client.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar BoardPiece;\n(function (BoardPiece) {\n    BoardPiece[BoardPiece[\"EMPTY\"] = 0] = \"EMPTY\";\n    BoardPiece[BoardPiece[\"PLAYER_1\"] = 1] = \"PLAYER_1\";\n    BoardPiece[BoardPiece[\"PLAYER_2\"] = 2] = \"PLAYER_2\";\n    BoardPiece[BoardPiece[\"DRAW\"] = 3] = \"DRAW\";\n})(BoardPiece = exports.BoardPiece || (exports.BoardPiece = {}));\nvar Board = (function () {\n    function Board(canvas) {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n        this.getBoardScale();\n        this.initConstants();\n        this.reset();\n        this.onresize();\n    }\n    Board.prototype.reset = function () {\n        this.map = [];\n        for (var i = 0; i < Board.ROWS; i++) {\n            this.map.push([]);\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                this.map[i].push(BoardPiece.EMPTY);\n            }\n        }\n        this.winnerBoardPiece = BoardPiece.EMPTY;\n        utils_1.Utils.clearCanvas(this);\n    };\n    Board.prototype.getBoardScale = function () {\n        return (window.innerWidth < 640)\n            ? Board.SCALE = 0.5\n            : Board.SCALE = 1.0;\n    };\n    Board.prototype.initConstants = function () {\n        Board.CANVAS_HEIGHT = Board.SCALE * 480;\n        Board.CANVAS_WIDTH = Board.SCALE * 640;\n        Board.PIECE_RADIUS = Board.SCALE * 25;\n        Board.MASK_X_BEGIN = Math.max(0, Board.CANVAS_WIDTH - (3 * Board.COLUMNS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MASK_Y_BEGIN = Math.max(0, Board.CANVAS_HEIGHT - (3 * Board.ROWS + 1) * Board.PIECE_RADIUS) / 2;\n        Board.MESSAGE_WIDTH = Board.SCALE * 400;\n        Board.MESSAGE_X_BEGIN = (Board.CANVAS_WIDTH - Board.MESSAGE_WIDTH) / 2;\n        Board.MESSAGE_Y_BEGIN = Board.SCALE * 20;\n        this.canvas.width = Board.CANVAS_WIDTH;\n        this.canvas.height = Board.CANVAS_HEIGHT;\n    };\n    Board.prototype.onresize = function () {\n        var _this = this;\n        var prevBoardScale = Board.SCALE;\n        utils_1.Utils.onresize().add(function () {\n            _this.getBoardScale();\n            if (prevBoardScale !== Board.SCALE) {\n                prevBoardScale = Board.SCALE;\n                _this.initConstants();\n                utils_1.Utils.clearCanvas(_this);\n                _this.render();\n            }\n        });\n    };\n    Board.prototype.applyPlayerAction = function (player, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isColumnEverFilled, row, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.map[0][column] !== BoardPiece.EMPTY || column < 0 || column >= Board.COLUMNS) {\n                            return [2 /*return*/, false];\n                        }\n                        isColumnEverFilled = false;\n                        row = 0;\n                        for (i = 0; i < Board.ROWS - 1; i++) {\n                            if (this.map[i + 1][column] !== BoardPiece.EMPTY) {\n                                isColumnEverFilled = true;\n                                row = i;\n                                break;\n                            }\n                        }\n                        if (!isColumnEverFilled) {\n                            row = Board.ROWS - 1;\n                        }\n                        return [4 /*yield*/, this.animateAction(row, column, player.boardPiece)];\n                    case 1:\n                        _a.sent();\n                        this.map[row][column] = player.boardPiece;\n                        this.debug();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.render();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Board.prototype.debug = function () {\n        console.log(this.map.map(function (row) { return row.join(' '); }).join('\\n'));\n    };\n    Board.prototype.getWinner = function () {\n        var _this = this;\n        if (this.winnerBoardPiece !== BoardPiece.EMPTY) {\n            return this.winnerBoardPiece;\n        }\n        var direction = [\n            [0, -1],\n            [0, 1],\n            [-1, -1],\n            [-1, 0],\n            [-1, 1],\n            [1, -1],\n            [1, 0],\n            [1, 1]\n        ];\n        var isWinningSequence = function (i, j, playerPiece, dir, count) {\n            if (count >= 4) {\n                return true;\n            }\n            if (i < 0 || j < 0 || i >= Board.ROWS || j >= Board.COLUMNS || _this.map[i][j] !== playerPiece) {\n                return false;\n            }\n            return isWinningSequence(i + dir[0], j + dir[1], playerPiece, dir, count + 1);\n        };\n        var countEmpty = 0;\n        for (var i = 0; i < Board.ROWS; i++) {\n            for (var j = 0; j < Board.COLUMNS; j++) {\n                var playerPiece = this.map[i][j];\n                if (playerPiece !== BoardPiece.EMPTY) {\n                    for (var k = 0; k < direction.length; k++) {\n                        var isWon = isWinningSequence(i + direction[k][0], j + direction[k][1], playerPiece, direction[k], 1);\n                        if (isWon) {\n                            return this.winnerBoardPiece = playerPiece;\n                        }\n                    }\n                }\n                else {\n                    countEmpty++;\n                }\n            }\n        }\n        if (countEmpty === 0) {\n            return this.winnerBoardPiece = BoardPiece.DRAW;\n        }\n        return BoardPiece.EMPTY;\n    };\n    Board.prototype.announceWinner = function () {\n        if (this.winnerBoardPiece === BoardPiece.EMPTY) {\n            return;\n        }\n        var message = '<h1>Thank you for playing.</h1>';\n        if (this.winnerBoardPiece === BoardPiece.DRAW) {\n            message += \"It's a draw\";\n        }\n        else {\n            message += \"Player \" + this.winnerBoardPiece + \" wins\";\n        }\n        message += '.<br />After dismissing this message, click the board to reset game.';\n        utils_1.Utils.showMessage(message);\n    };\n    Board.prototype.getPlayerColor = function (boardPiece) {\n        switch (boardPiece) {\n            case BoardPiece.PLAYER_1: return Board.PLAYER_1_COLOR;\n            case BoardPiece.PLAYER_2: return Board.PLAYER_2_COLOR;\n            default: return 'transparent';\n        }\n    };\n    Board.prototype.animateAction = function (newRow, column, boardPiece) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var fillStyle, currentY, doAnimation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        fillStyle = this.getPlayerColor(boardPiece);\n                        currentY = 0;\n                        doAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                utils_1.Utils.clearCanvas(this);\n                                utils_1.Utils.drawCircle(this.context, {\n                                    x: 3 * Board.PIECE_RADIUS * column + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    y: currentY + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                                    r: Board.PIECE_RADIUS,\n                                    fillStyle: fillStyle,\n                                    strokeStyle: Board.PIECE_STROKE_STYLE\n                                });\n                                this.render();\n                                currentY += Board.PIECE_RADIUS;\n                                return [2 /*return*/];\n                            });\n                        }); };\n                        _a.label = 1;\n                    case 1:\n                        if (!(newRow * 3 * Board.PIECE_RADIUS >= currentY)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        doAnimation();\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    Board.prototype.render = function () {\n        utils_1.Utils.drawMask(this);\n        for (var y = 0; y < Board.ROWS; y++) {\n            for (var x = 0; x < Board.COLUMNS; x++) {\n                utils_1.Utils.drawCircle(this.context, {\n                    x: 3 * Board.PIECE_RADIUS * x + Board.MASK_X_BEGIN + 2 * Board.PIECE_RADIUS,\n                    y: 3 * Board.PIECE_RADIUS * y + Board.MASK_Y_BEGIN + 2 * Board.PIECE_RADIUS,\n                    r: Board.PIECE_RADIUS,\n                    fillStyle: this.getPlayerColor(this.map[y][x]),\n                    strokeStyle: Board.PIECE_STROKE_STYLE\n                });\n            }\n        }\n    };\n    return Board;\n}());\nBoard.ROWS = 6;\nBoard.COLUMNS = 7;\nBoard.PLAYER_1_COLOR = '#55cc88';\nBoard.PLAYER_2_COLOR = '#33bbbb';\nBoard.PIECE_STROKE_STYLE = 'black';\nBoard.MASK_COLOR = '#d8d8d8';\nexports.Board = Board;\n\n//# sourceMappingURL=board.js.map\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar GameBase = (function () {\n    function GameBase(players, canvas) {\n        this.board = new board_1.Board(canvas);\n        this.players = players;\n        this.currentPlayerId = 0;\n        this.reset();\n    }\n    GameBase.prototype.reset = function () {\n        this.isMoveAllowed = false;\n        this.isGameWon = false;\n        this.board.reset();\n        this.board.render();\n        this.board.debug();\n    };\n    GameBase.prototype.start = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var winner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.isMoveAllowed = true;\n                        _a.label = 1;\n                    case 1:\n                        if (!!this.isGameWon) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.move()];\n                    case 2:\n                        _a.sent();\n                        winner = this.board.getWinner();\n                        if (winner !== board_1.BoardPiece.EMPTY) {\n                            console.log('Game over: winner is player ', winner);\n                            this.isGameWon = true;\n                            this.isMoveAllowed = false;\n                            this.board.announceWinner();\n                            return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 1];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.move = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentPlayer, actionSuccesful, action;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isMoveAllowed) {\n                            return [2 /*return*/];\n                        }\n                        currentPlayer = this.players[this.currentPlayerId];\n                        actionSuccesful = false;\n                        _a.label = 1;\n                    case 1:\n                        if (!!actionSuccesful) return [3 /*break*/, 4];\n                        return [4 /*yield*/, currentPlayer.getAction(this.board)];\n                    case 2:\n                        action = _a.sent();\n                        this.isMoveAllowed = false;\n                        return [4 /*yield*/, this.board.applyPlayerAction(currentPlayer, action)];\n                    case 3:\n                        actionSuccesful = _a.sent();\n                        this.isMoveAllowed = true;\n                        if (!actionSuccesful) {\n                            console.log('Move not allowed! Try again.');\n                        }\n                        else {\n                            this.afterMove(action);\n                        }\n                        return [3 /*break*/, 1];\n                    case 4:\n                        this.currentPlayerId = this.getNextPlayer();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameBase.prototype.afterMove = function (action) {\n    };\n    GameBase.prototype.getNextPlayer = function () {\n        return (this.currentPlayerId === 0) ? 1 : 0;\n    };\n    return GameBase;\n}());\nexports.GameBase = GameBase;\n\n//# sourceMappingURL=game-base.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar GameFlyweb = (function (_super) {\n    __extends(GameFlyweb, _super);\n    function GameFlyweb(players, canvas, clientMode) {\n        if (clientMode === void 0) { clientMode = false; }\n        var _this = _super.call(this, players, canvas) || this;\n        _this.BASE_URL = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));\n        _this.browser = navigator;\n        _this.isAcceptingPlayer = true;\n        _this.clientMode = clientMode;\n        if (clientMode) {\n            _this.playerSlave = players[0];\n            _this.playerMaster = players[1];\n            _this.initClient();\n        }\n        else {\n            _this.playerMaster = players[0];\n            _this.playerSlave = players[1];\n            _this.initServer();\n        }\n        return _this;\n    }\n    GameFlyweb.prototype.afterMove = function (action) {\n        if ((this.clientMode && this.currentPlayerId === 1) || (!this.clientMode && this.currentPlayerId === 0)) {\n            this.playerMaster.socket.send(JSON.stringify({\n                type: 'move',\n                data: {\n                    column: action,\n                    from: this.currentPlayerId === 0 ? 'server' : 'client'\n                }\n            }));\n        }\n    };\n    GameFlyweb.prototype.initClient = function () {\n        this.handleClientWs();\n    };\n    GameFlyweb.prototype.handleClientWs = function () {\n        var _this = this;\n        var socket = new WebSocket('ws://' + window.location.host + '/api/ws');\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('client socket.onopen()', evt);\n        };\n        socket.onclose = function (evt) {\n            console.log('client socket.onclose()', evt);\n        };\n        socket.onerror = function (evt) {\n            console.log('client socket.onerror()', evt);\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('client socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (message.from === 'client') {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'start')) return [3 /*break*/, 1];\n                        utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 1 has been established. Game started!');\n                        this.start();\n                        return [3 /*break*/, 4];\n                    case 1:\n                        if (!(message.type === 'move')) return [3 /*break*/, 2];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 4];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 3:\n                        _a.sent();\n                        this.start();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.fetch = function (evt, url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, contentType, blob, headers;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(this.BASE_URL + url)];\n                    case 1:\n                        response = _a.sent();\n                        contentType = response.headers.get('Content-Type');\n                        return [4 /*yield*/, response.blob()];\n                    case 2:\n                        blob = _a.sent();\n                        headers = {\n                            'Content-Type': contentType,\n                            'Cache-Control': 'no-cache, no-store, must-revalidate',\n                            'Pragma': 'no-cache',\n                            'Expires': 0\n                        };\n                        console.log('Response is: ', url);\n                        evt.respondWith(new Promise(function (r) { return r(new Response(blob, { headers: headers })); }));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GameFlyweb.prototype.handleWsServer = function (evt) {\n        var _this = this;\n        var socket = evt.accept();\n        this.playerMaster.socket = socket;\n        socket.onopen = function (evt) {\n            console.log('server socket.onopen()', evt, socket);\n            if (_this.isAcceptingPlayer) {\n                _this.isAcceptingPlayer = false;\n                socket.send(JSON.stringify({\n                    type: 'start',\n                    data: {\n                        accepted: _this.isAcceptingPlayer\n                    }\n                }));\n                utils_1.Utils.showMessage('<h1>Welcome!</h1>Connection to Player 2 has been established. Game started!');\n                _this.start();\n            }\n            else {\n                socket.close();\n            }\n        };\n        socket.onclose = function (evt) {\n            console.log('server socket.onclose()', evt);\n            _this.isAcceptingPlayer = true;\n            _this.reset();\n        };\n        socket.onerror = function (evt) {\n            console.log('server socket.onerror()', evt);\n            _this.isAcceptingPlayer = true;\n            socket.close();\n        };\n        socket.onmessage = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n            var message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log('server socket.onmessage()', evt);\n                        message = JSON.parse(evt.data);\n                        if (!message) {\n                            return [2 /*return*/];\n                        }\n                        if (message.from === 'server') {\n                            return [2 /*return*/];\n                        }\n                        if (!(message.type === 'move')) return [3 /*break*/, 1];\n                        this.playerSlave.doAction(message.data.column);\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (!(message.type === 'reset')) return [3 /*break*/, 3];\n                        this.reset();\n                        return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                    case 2:\n                        _a.sent();\n                        this.start();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n    GameFlyweb.prototype.initServer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var server;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!('publishServer' in this.browser)) {\n                            utils_1.Utils.showMessage(\"<h1>Attention!</h1>\\n        FlyWeb requires Firefox Developer Edition or Nightly,\\n        and enabling \\\"dom.flyweb.enabled\\\" flag at about:config\");\n                            return [2 /*return*/, false];\n                        }\n                        return [4 /*yield*/, this.browser.publishServer('c4 - Connect Four')];\n                    case 1:\n                        server = _a.sent();\n                        server.onfetch = function (evt) { return __awaiter(_this, void 0, void 0, function () {\n                            var urlParts, url, params, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        urlParts = evt.request.url.split('?');\n                                        url = urlParts[0];\n                                        params = new URLSearchParams(urlParts[1]);\n                                        console.log('me Requested for url: ', url, params);\n                                        _a = url;\n                                        switch (_a) {\n                                            case '/dist/app.js': return [3 /*break*/, 1];\n                                        }\n                                        return [3 /*break*/, 3];\n                                    case 1: return [4 /*yield*/, this.fetch(evt, '/dist/app-flyweb-client.js')];\n                                    case 2:\n                                        _b.sent();\n                                        return [3 /*break*/, 5];\n                                    case 3: return [4 /*yield*/, this.fetch(evt, url)];\n                                    case 4:\n                                        _b.sent();\n                                        _b.label = 5;\n                                    case 5: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        server.onwebsocket = function (evt) {\n                            var url = evt.request.url;\n                            if (url === '/api/ws') {\n                                _this.handleWsServer(evt);\n                            }\n                        };\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return GameFlyweb;\n}(game_base_1.GameBase));\nfunction initGameFlyweb(_a) {\n    var _this = this;\n    var _b = _a.clientMode, clientMode = _b === void 0 ? false : _b;\n    var canvas = document.querySelector('canvas');\n    var players = null;\n    if (clientMode) {\n        players = [\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    else {\n        players = [\n            new player_1.PlayerFlywebMaster(board_1.BoardPiece.PLAYER_1, canvas),\n            new player_1.PlayerFlywebSlave(board_1.BoardPiece.PLAYER_2, canvas)\n        ];\n    }\n    var game = new GameFlyweb(players, canvas, clientMode);\n    utils_1.Utils.showMessage('<h1>Welcome!</h1>Game will start after Player 2 has been connected.');\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    if (game.playerMaster && game.playerMaster.socket) {\n                        game.playerMaster.socket.send(JSON.stringify({\n                            type: 'reset',\n                            data: {\n                                reset: true\n                            }\n                        }));\n                    }\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameFlyweb = initGameFlyweb;\n\n//# sourceMappingURL=game-flyweb.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocal2p = (function (_super) {\n    __extends(GameLocal2p, _super);\n    function GameLocal2p(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocal2p;\n}(game_base_1.GameBase));\nfunction initGameLocal2p() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocal2p([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocal2p = initGameLocal2p;\n\n//# sourceMappingURL=game-local-2p.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"../board\");\nvar game_base_1 = require(\"./game-base\");\nvar player_1 = require(\"../player\");\nvar utils_1 = require(\"../utils\");\nvar GameLocalAi = (function (_super) {\n    __extends(GameLocalAi, _super);\n    function GameLocalAi(players, canvas) {\n        return _super.call(this, players, canvas) || this;\n    }\n    return GameLocalAi;\n}(game_base_1.GameBase));\nfunction initGameLocalAi() {\n    var _this = this;\n    var canvas = document.querySelector('canvas');\n    var game = new GameLocalAi([\n        new player_1.PlayerHuman(board_1.BoardPiece.PLAYER_1, canvas),\n        new player_1.PlayerAi(board_1.BoardPiece.PLAYER_2, canvas)\n    ], canvas);\n    game.start();\n    canvas.addEventListener('click', function () { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!game.isGameWon) return [3 /*break*/, 2];\n                    game.reset();\n                    return [4 /*yield*/, utils_1.Utils.animationFrame()];\n                case 1:\n                    _a.sent();\n                    game.start();\n                    _a.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); });\n}\nexports.initGameLocalAi = initGameLocalAi;\n\n//# sourceMappingURL=game-local-ai.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./game-flyweb\"));\n__export(require(\"./game-local-2p\"));\n__export(require(\"./game-local-ai\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./player\"));\n__export(require(\"./player-ai\"));\n__export(require(\"./player-human\"));\n__export(require(\"./player-flyweb-master\"));\n__export(require(\"./player-flyweb-slave\"));\n\n//# sourceMappingURL=index.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerAi = (function (_super) {\n    __extends(PlayerAi, _super);\n    function PlayerAi(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.ownBoardPieceValue = _this.getBoardPieceValue(boardPiece);\n        _this.enemyBoardPiece = (boardPiece === board_1.BoardPiece.PLAYER_1) ? board_1.BoardPiece.PLAYER_2 : board_1.BoardPiece.PLAYER_1;\n        return _this;\n    }\n    PlayerAi.prototype.getBoardPieceValue = function (boardPiece) {\n        return (boardPiece === board_1.BoardPiece.EMPTY)\n            ? 0\n            : boardPiece === this.boardPiece\n                ? 1\n                : -1;\n    };\n    PlayerAi.prototype.getStateValue = function (state) {\n        var winnerBoardPiece = board_1.BoardPiece.EMPTY;\n        var chainValue = 0;\n        for (var i = 0; i < board_1.Board.ROWS; i++) {\n            for (var j = 0; j < board_1.Board.COLUMNS; j++) {\n                var tempRight = 0, tempBottom = 0, tempBottomRight = 0, tempTopRight = 0;\n                for (var k = 0; k <= 3; k++) {\n                    if (j + k < board_1.Board.COLUMNS) {\n                        tempRight += this.getBoardPieceValue(state[i][j + k]);\n                    }\n                    if (i + k < board_1.Board.ROWS) {\n                        tempBottom += this.getBoardPieceValue(state[i + k][j]);\n                    }\n                    if (i + k < board_1.Board.ROWS && j + k < board_1.Board.COLUMNS) {\n                        tempBottomRight += this.getBoardPieceValue(state[i + k][j + k]);\n                    }\n                    if (i - k >= 0 && j + k < 7) {\n                        tempTopRight += this.getBoardPieceValue(state[i - k][j + k]);\n                    }\n                }\n                chainValue += tempRight * tempRight * tempRight;\n                chainValue += tempBottom * tempBottom * tempBottom;\n                chainValue += tempBottomRight * tempBottomRight * tempBottomRight;\n                chainValue += tempTopRight * tempTopRight * tempTopRight;\n                if (Math.abs(tempRight) === 4) {\n                    winnerBoardPiece = tempRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottom) === 4) {\n                    winnerBoardPiece = tempBottom > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempBottomRight) === 4) {\n                    winnerBoardPiece = tempBottomRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n                else if (Math.abs(tempTopRight) === 4) {\n                    winnerBoardPiece = tempTopRight > 0 ? this.boardPiece : this.enemyBoardPiece;\n                }\n            }\n        }\n        return {\n            winnerBoardPiece: winnerBoardPiece,\n            chain: chainValue\n        };\n    };\n    PlayerAi.prototype.transformValues = function (returnValue, winnerBoardPiece, depth) {\n        var isWon = winnerBoardPiece === this.boardPiece;\n        var isLost = winnerBoardPiece === this.enemyBoardPiece;\n        if (isWon) {\n            returnValue = utils_1.Utils.BIG_POSITIVE_NUMBER - 100;\n        }\n        else if (isLost) {\n            returnValue = utils_1.Utils.BIG_NEGATIVE_NUMBER + 100;\n        }\n        returnValue -= depth * depth;\n        return returnValue;\n    };\n    PlayerAi.prototype.getMove = function (state, depth, alpha, beta) {\n        var stateValue = this.getStateValue(state);\n        var isWon = stateValue.winnerBoardPiece === this.boardPiece;\n        var isLost = stateValue.winnerBoardPiece === this.enemyBoardPiece;\n        if (depth >= PlayerAi.MAX_DEPTH || isWon || isLost) {\n            return {\n                value: this.transformValues(stateValue.chain * this.ownBoardPieceValue, stateValue.winnerBoardPiece, depth),\n                move: -1\n            };\n        }\n        return (depth % 2 === 0)\n            ? this.minState(state, depth + 1, alpha, beta)\n            : this.maxState(state, depth + 1, alpha, beta);\n    };\n    PlayerAi.prototype.maxState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_NEGATIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.boardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue > value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value > beta) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                alpha = Math.max(alpha, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.minState = function (state, depth, alpha, beta) {\n        var value = utils_1.Utils.BIG_POSITIVE_NUMBER;\n        var moveQueue = [];\n        for (var column = 0; column < board_1.Board.COLUMNS; column++) {\n            var _a = utils_1.Utils.getMockPlayerAction(state, this.enemyBoardPiece, column), actionSuccessful = _a.success, nextState = _a.map;\n            if (actionSuccessful) {\n                var _b = this.getMove(nextState, depth, alpha, beta), nextValue = _b.value, nextMove = _b.move;\n                if (nextValue < value) {\n                    value = nextValue;\n                    moveQueue = [column];\n                }\n                else if (nextValue === value) {\n                    moveQueue.push(column);\n                }\n                if (value < alpha) {\n                    return {\n                        value: value,\n                        move: utils_1.Utils.choose(moveQueue)\n                    };\n                }\n                beta = Math.min(beta, value);\n            }\n        }\n        return {\n            value: value,\n            move: utils_1.Utils.choose(moveQueue)\n        };\n    };\n    PlayerAi.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var state, action;\n            return __generator(this, function (_a) {\n                state = utils_1.Utils.clone(board.map);\n                action = this.maxState(state, 0, utils_1.Utils.BIG_NEGATIVE_NUMBER, utils_1.Utils.BIG_POSITIVE_NUMBER);\n                console.log(\"AI \" + this.boardPiece + \" choose column \" + action.move + \" with value of \" + action.value);\n                return [2 /*return*/, action.move];\n            });\n        });\n    };\n    return PlayerAi;\n}(player_1.Player));\nPlayerAi.MAX_DEPTH = 4;\nexports.PlayerAi = PlayerAi;\n\n//# sourceMappingURL=player-ai.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\".\");\nvar PlayerFlywebMaster = (function (_super) {\n    __extends(PlayerFlywebMaster, _super);\n    function PlayerFlywebMaster(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebMaster.prototype.doAction = function (column) {\n        _super.prototype.doAction.call(this, column);\n        if (!this.socket) {\n            throw Error('PlayerFlywebMaster need WebSocket object');\n        }\n    };\n    PlayerFlywebMaster.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebMaster;\n}(_1.PlayerHuman));\nexports.PlayerFlywebMaster = PlayerFlywebMaster;\n\n//# sourceMappingURL=player-flyweb-master.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar PlayerFlywebSlave = (function (_super) {\n    __extends(PlayerFlywebSlave, _super);\n    function PlayerFlywebSlave(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.actionPromiseResolver = null;\n        return _this;\n    }\n    PlayerFlywebSlave.prototype.doAction = function (column) {\n        if (this.actionPromiseResolver) {\n            this.actionPromiseResolver(column);\n        }\n    };\n    PlayerFlywebSlave.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.actionPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerFlywebSlave;\n}(player_1.Player));\nexports.PlayerFlywebSlave = PlayerFlywebSlave;\n\n//# sourceMappingURL=player-flyweb-slave.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;\n    return { next: verb(0), \"throw\": verb(1), \"return\": verb(2) };\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar player_1 = require(\"./player\");\nvar board_1 = require(\"../board\");\nvar utils_1 = require(\"../utils\");\nvar PlayerHuman = (function (_super) {\n    __extends(PlayerHuman, _super);\n    function PlayerHuman(boardPiece, canvas) {\n        var _this = _super.call(this, boardPiece, canvas) || this;\n        _this.clickPromiseResolver = null;\n        canvas.addEventListener('click', function (evt) {\n            try {\n                _this.handleClick(evt);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        });\n        return _this;\n    }\n    PlayerHuman.prototype.doAction = function (column) {\n        if (this.clickPromiseResolver && 0 <= column && column < board_1.Board.COLUMNS) {\n            this.clickPromiseResolver(column);\n        }\n    };\n    PlayerHuman.prototype.handleClick = function (event) {\n        var rect = this.canvas.getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var column = utils_1.Utils.getColumnFromCoord({ x: x, y: y });\n        this.doAction(column);\n    };\n    PlayerHuman.prototype.getAction = function (board) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (r) { return _this.clickPromiseResolver = r; })];\n            });\n        });\n    };\n    return PlayerHuman;\n}(player_1.Player));\nexports.PlayerHuman = PlayerHuman;\n\n//# sourceMappingURL=player-human.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Player = (function () {\n    function Player(boardPiece, canvas) {\n        this.boardPiece = boardPiece;\n        this.canvas = canvas;\n    }\n    return Player;\n}());\nexports.Player = Player;\n\n//# sourceMappingURL=player.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar board_1 = require(\"./board\");\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.showMessage = function (message) {\n        if (message === void 0) { message = ''; }\n        var messageDOM = document.querySelector('.message');\n        messageDOM.classList.remove('hidden');\n        var messageContentDOM = document.querySelector('.message-body-content');\n        messageContentDOM.innerHTML = message;\n        var messageDismissDOM = document.querySelector('.message-body-dismiss');\n        var dismissHandler = function () {\n            messageDOM.classList.add('invisible');\n            messageDOM.addEventListener('transitionend', function () {\n                messageDOM.classList.add('hidden');\n                messageDOM.classList.remove('invisible');\n            });\n            messageDismissDOM.removeEventListener('click', dismissHandler);\n        };\n        messageDismissDOM.addEventListener('click', dismissHandler);\n    };\n    Utils.drawCircle = function (context, _a) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.r, r = _d === void 0 ? 0 : _d, _e = _a.fillStyle, fillStyle = _e === void 0 ? '' : _e, _f = _a.strokeStyle, strokeStyle = _f === void 0 ? '' : _f;\n        context.save();\n        context.fillStyle = fillStyle;\n        context.strokeStyle = strokeStyle;\n        context.beginPath();\n        context.arc(x, y, r, 0, 2 * Math.PI, false);\n        context.fill();\n        context.restore();\n    };\n    Utils.drawMask = function (board) {\n        var context = board.context;\n        context.save();\n        context.fillStyle = board_1.Board.MASK_COLOR;\n        context.beginPath();\n        var doubleRadius = 2 * board_1.Board.PIECE_RADIUS;\n        var tripleRadius = 3 * board_1.Board.PIECE_RADIUS;\n        for (var y = 0; y < board_1.Board.ROWS; y++) {\n            for (var x = 0; x < board_1.Board.COLUMNS; x++) {\n                context.arc(tripleRadius * x + board_1.Board.MASK_X_BEGIN + doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN + doubleRadius, board_1.Board.PIECE_RADIUS, 0, 2 * Math.PI);\n                context.rect(tripleRadius * x + board_1.Board.MASK_X_BEGIN + 2 * doubleRadius, tripleRadius * y + board_1.Board.MASK_Y_BEGIN, -2 * doubleRadius, 2 * doubleRadius);\n            }\n        }\n        context.fill();\n        context.restore();\n    };\n    Utils.clearCanvas = function (board) {\n        board.context.clearRect(0, 0, board.canvas.width, board.canvas.height);\n    };\n    Utils.isCoordOnColumn = function (coord, columnXBegin, radius) {\n        return ((coord.x - columnXBegin) * (coord.x - columnXBegin) <= radius * radius);\n    };\n    Utils.getColumnFromCoord = function (coord) {\n        for (var i = 0; i < board_1.Board.COLUMNS; i++) {\n            if (Utils.isCoordOnColumn(coord, 3 * board_1.Board.PIECE_RADIUS * i + board_1.Board.MASK_X_BEGIN + 2 * board_1.Board.PIECE_RADIUS, board_1.Board.PIECE_RADIUS)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    Utils.getRandomColumnNumber = function () {\n        return Math.floor(Math.random() * board_1.Board.COLUMNS);\n    };\n    Utils.choose = function (choice) {\n        return choice[Math.floor(Math.random() * choice.length)];\n    };\n    Utils.animationFrame = function () {\n        var resolve = null;\n        var promise = new Promise(function (r) { return resolve = r; });\n        window.requestAnimationFrame(resolve);\n        return promise;\n    };\n    Utils.clone = function (array) {\n        var arr = [];\n        for (var i = 0; i < array.length; i++) {\n            arr[i] = array[i].slice();\n        }\n        return arr;\n    };\n    Utils.getMockPlayerAction = function (map, boardPiece, column) {\n        var clonedMap = Utils.clone(map);\n        if (clonedMap[0][column] !== board_1.BoardPiece.EMPTY || column < 0 || column >= board_1.Board.COLUMNS) {\n            return {\n                success: false,\n                map: clonedMap\n            };\n        }\n        var isColumnEverFilled = false;\n        var row = 0;\n        for (var i = 0; i < board_1.Board.ROWS - 1; i++) {\n            if (clonedMap[i + 1][column] !== board_1.BoardPiece.EMPTY) {\n                isColumnEverFilled = true;\n                row = i;\n                break;\n            }\n        }\n        if (!isColumnEverFilled) {\n            row = board_1.Board.ROWS - 1;\n        }\n        clonedMap[row][column] = boardPiece;\n        return {\n            success: true,\n            map: clonedMap\n        };\n    };\n    Utils.onresize = function () {\n        var callbacks = [], running = false;\n        function resize() {\n            if (!running) {\n                running = true;\n                if (window.requestAnimationFrame) {\n                    window.requestAnimationFrame(runCallbacks);\n                }\n                else {\n                    setTimeout(runCallbacks, 66);\n                }\n            }\n        }\n        function runCallbacks() {\n            callbacks.forEach(function (callback) {\n                callback();\n            });\n            running = false;\n        }\n        function addCallback(callback) {\n            if (callback) {\n                callbacks.push(callback);\n            }\n        }\n        return {\n            add: function (callback) {\n                if (!callbacks.length) {\n                    window.addEventListener('resize', resize);\n                }\n                addCallback(callback);\n            }\n        };\n    };\n    return Utils;\n}());\nUtils.BIG_POSITIVE_NUMBER = Math.pow(10, 9) + 7;\nUtils.BIG_NEGATIVE_NUMBER = -Utils.BIG_POSITIVE_NUMBER;\nexports.Utils = Utils;\n\n//# sourceMappingURL=utils.js.map\n"]}